name: Build docker ECR

on:
  workflow_call:
    inputs:
      ECR_REPOSITORY:
        type: string
        required: false
        description: "Name of ECR repository where docker image will be pushed."
      DOCKER_TAG_1:
        type: string
        required: true
        description: "Name of docker image tag1 which will be pushed to ECR."
    secrets:
      AWS_SECRET_ACCESS_KEY:
        required: false
        description: "AWS secret access key for testing."

permissions:
  id-token: write
  contents: write

jobs:
  docker:
    name: Build & push docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Simulate AWS Login
        run: echo "Simulating AWS login for testing."

      - name: Simulate ECR Login
        if: ${{ inputs.ECR_REPOSITORY }}
        run: echo "Simulating ECR login for repository ${{ inputs.ECR_REPOSITORY }}."

      - name: Skip Docker Push (No ECR_REPOSITORY)
        if: ${{ inputs.ECR_REPOSITORY == '' }}
        run: echo "Skipping docker push since ECR_REPOSITORY is not provided."

      - name: Remove slash from DOCKER_TAG_1 and trim to 128 characters
        id: tag_trim1
        run: |
          DOCKER_TAG_1_NO_SLASH=$(echo ${{ inputs.DOCKER_TAG_1 }} | sed 's#/#-#g')
          DOCKER_TAG_1_TRIMMED="${DOCKER_TAG_1_NO_SLASH:0:127}"
          echo "DOCKER_TAG_1_TRIMMED=${DOCKER_TAG_1_TRIMMED}" >> $GITHUB_ENV

      - name: Docker image build
        id: docker_build
        env:
          DOCKER_ARGS: "--no-cache"
        run: |
          docker build -f Dockerfile -t local_image .
        working-directory: .

      - name: Docker image tag & push
        if: ${{ inputs.ECR_REPOSITORY != '' }}
        run: |
          echo "Tagging and pushing docker image for ${{ inputs.ECR_REPOSITORY }}."
          docker tag local_image ${{ inputs.ECR_REPOSITORY }}:${{ env.DOCKER_TAG_1_TRIMMED }}
          docker push ${{ inputs.ECR_REPOSITORY }}:${{ env.DOCKER_TAG_1_TRIMMED }}
